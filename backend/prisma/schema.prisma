// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id              String  @id   @default(uuid())
  name            String  
  email           String   @unique 
  password        String
  type            String 
  userProfile     UserProfile?  
}

model UserProfile{
  id              String    @id @default(uuid())
  Phone           Int     @unique 
  expectedSalary  Int? 
  noticePeriod    Int? 
  resume          String? 
  resumeHeadline  String? 
  skills          String[]
  project         Project[]
  Education       Education[]
  Links           Links[]
  Publications    Publications[]
  languages       languages[]
  userId          String    @unique
  user            User      @relation(fields: [userId],references: [id])
}

model Project{
  id            String   @id @default(uuid())
  title         String 
  from          DateTime
  to            DateTime
  details       String 
  userId        String
  userProfile   UserProfile    @relation(fields: [userId],references: [id])    
}

model  Education{
  id              String @id  @default(uuid())
  education       String 
  specialization  String 
  institute       String 
  course          String 
  courseType      String 
  grade           Float?
  from            DateTime
  to              DateTime
  userId          String 
  userProfile     UserProfile  @relation(fields: [userId],references: [id])
}

model Links{
  id            String  @id  @default(uuid())
  title         String
  link          String 
  userId        String
  userProfile   UserProfile  @relation(fields: [userId],references: [id])
}

model  Publications{
  id            String   @id  @default(uuid())
  title         String
  description   String 
  userId        String
  userProfile   UserProfile  @relation(fields: [userId],references: [id])
}

model languages{
  id            String  @id  @default(uuid())
  title         String 
  read          Boolean
  write         Boolean
  speak         Boolean 
  userId        String
  userProfile   UserProfile  @relation(fields: [userId],references: [id])
}